geom_jitter()
ggplot(data = ROI_analysis, aes(x = Imagery_items, y = psc_EmoNeg)) +
geom_jitter()
ggplot(data = ROI_analysis, aes(x = Emotional_Engagement_items, y = psc_EmoNeg)) +
geom_jitter()
for (i in 1:nrow(ROI_analysis)) {
if (ROI_analysis$psc_EmoNeg[i] < 0) {
ROI_analysis$psc_EmoNeg[i] = -1* ROI_analysis$psc_EmoNeg[i]
}
#exploratory data analysis
ggpairs(data = ROI_analysis[, c("beta_EmoNeg_Cbellum", "beta_EmoNeg_rParahipp", "beta_EmoNeg_rMFG",
"beta_EmoNeg_ParietalL", "beta_EmoNeg", "psc_EmoNeg" )])
ggplot(data = ROI_analysis, aes(x = pc1_wellwritten, y = psc_EmoNeg)) +
geom_jitter()
ggplot(data = ROI_analysis, aes(x = pc2_accessible, y = psc_EmoNeg)) +
geom_jitter()
ggplot(data = ROI_analysis, aes(x = pc3_interesting, y = psc_EmoNeg)) +
geom_jitter()
ggplot(data = ROI_analysis, aes(x = Imagery_items, y = psc_EmoNeg)) +
geom_jitter()
ggplot(data = ROI_analysis, aes(x = Emotional_Engagement_items, y = psc_EmoNeg)) +
geom_jitter()
ggplot(data = ROI_analysis, aes(x = pc1_wellwritten, y = psc_EmoNeg)) +
geom_point()
ggplot(data = ROI_analysis, aes(x = Emotional_Engagement_items, y = psc_EmoNeg)) +
geom_point()
ggplot(data = ROI_analysis, aes(x = pc1_wellwritten, y = psc_EmoNeg)) +
geom_point()
ggplot(data = ROI_analysis, aes(x = pc2_accessible, y = psc_EmoNeg)) +
geom_point()
ggplot(data = ROI_analysis, aes(x = pc3_interesting, y = psc_EmoNeg)) +
geom_point()
ggplot(data = ROI_analysis, aes(x = Imagery_items, y = psc_EmoNeg)) +
geom_point()
ggplot(data = ROI_analysis, aes(x = Emotional_Engagement_items, y = psc_EmoNeg)) +
geom_point()
lmFPCN_pc1 <- lm(psc_EmoNeg ~ pc1_wellwritten, data = ROI_analysis)
ols_plot_dfbetas(model)
lmFPCN_pc1 <- lm(psc_EmoNeg ~ pc1_wellwritten, data = ROI_analysis)
plot(cookd(lmFPCN_pc1))
plot(cooks.distance(lmFPCN_pc1))
lmFPCN_pc2 <- lmer(psc_EmoNeg ~ pc2_accessible + (1|Story)
+ (1|fMRI_subj), data = ROI_analysis)
lmFPCN_pc2 <- lm(psc_EmoNeg ~ pc2_accessible, data = ROI_analysis)
plot(cooks.distance(lmFPCN_pc2))
summary(lmFPCN_pc2)
lmFPCN_pc3 <- lmer(psc_EmoNeg ~ pc3_interesting + (1|Story)
+ (1|fMRI_subj), data = ROI_analysis)
lmFPCN_pc3 <- lm(psc_EmoNeg ~ pc3_interesting, data = ROI_analysis)
plot(cooks.distance(lmFPCN_pc3))
summary(lmFPCN_pc3)
lmFPCN_imagery <- lmer(psc_EmoNeg ~ Imagery_items + (1|Story)
+ (1|fMRI_subj), data = ROI_analysis)
lmFPCN_imagery <- lm(psc_EmoNeg ~ Imagery_items, data = ROI_analysis)
plot(cooks.distance(lmFPCN_imagery))
summary(lmFPCN_imagery)
lmFPCN_EmoEng <- lmer(psc_EmoNeg ~ Emotional_Engagement_items + (1|Story)
+ (1|fMRI_subj), data = ROI_analysis)
lmFPCN_EmoEng <- lm(psc_EmoNeg ~ Emotional_Engagement_items, data = ROI_analysis)
plot(cooks.distance(lmFPCN_EmoEng))
summary(lmFPCN_EmoEng)
ggplot(data = ROI_analysis, aes(x = Imagery_items, y = psc_EmoNeg)) +
geom_point()
knitr::opts_chunk$set(echo = TRUE)
ROI_analysis <- read_excel("~/Desktop/ROI_analysis.xlsx")
library(readxl)
ROI_analysis <- read_excel("~/Desktop/ROI_analysis.xlsx")
ROI_analysis$Imagery_items <- as.numeric(ROI_analysis$Imagery_items)
ROI_analysis$Emotional_Engagement_items <- as.numeric(ROI_analysis$Emotional_Engagement_items)
knitr::opts_chunk$set(echo = TRUE)
rater <- read.delim("~/Documents/GitHub/RStudio/thesis/Behavioral/rater_group_behavioral.csv", header = TRUE, sep = ",", stringsAsFactors = TRUE)
fmri <- read.delim("~/Documents/GitHub/RStudio/thesis/Behavioral/fMRI_group_behavioral.csv", header = TRUE, sep = ",", stringsAsFactors = TRUE)
ttestResults <- data.frame()
for (i in 3:58) {
if ((i==11) | (i==13) | (i==22) | (i==24) | (i==40) | (i==56)) {
next()
}
else {
result.temp <- t.test(rater[,i], fmri[,i], vvar.equal = TRUE)
ttestResults[i-2, 1:3] <- c(result.temp$statistic[["t"]], result.temp$parameter[["df"]], result.temp$p.value)
}
View(result.temp)
ttestResults
view(ttestResults)
View(ttestResults)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
QualtricsGroup <- read_excel("~/Desktop/QualtricsGroup.xlsx")
for (i in 1:nrow(QualtricsGroup)) {
for (j in 4:27) {
if ((QualtricsGroup[i,j] >= 0) & (QualtricsGroup[i,j] <= 25)) {
QualtricsGroup[i,j] <- as.integer(1)
}
else if ((QualtricsGroup[i,j] > 25) & (QualtricsGroup[i,j] <= 50)) {
QualtricsGroup[i,j] <- as.integer(2)
}
else if ((QualtricsGroup[i,j] > 50) & (QualtricsGroup[i,j] <= 75)) {
QualtricsGroup[i,j] <- as.integer(3)
}
else if ((QualtricsGroup[i,j] > 75) & (QualtricsGroup[i,j] <= 100)) {
QualtricsGroup[i,j] <- as.integer(4)
}
# else if (QualtricsGroup[i,j] == 25) {
#   if (sample(c(TRUE, FALSE),1)) {
#     QualtricsGroup[i,j] <- as.integer(1)
#   }
#   else {
#     QualtricsGroup[i,j] <- as.integer(2)
#   }
# }
# else if (QualtricsGroup[i,j] == 50) {
#   if (sample(c(TRUE, FALSE),1)) {
#     QualtricsGroup[i,j] <- as.integer(2)
#   }
#   else {
#     QualtricsGroup[i,j] <- as.integer(3)
#   }
# }
# else if (QualtricsGroup[i,j] == 75) {
#   if (sample(c(TRUE, FALSE),1)) {
#     QualtricsGroup[i,j] <- as.integer(3)
#   }
#   else {
#     QualtricsGroup[i,j] <- as.integer(4)
#   }
# }
}
write.csv(QualtricsGroup, file = "~/Desktop/QualtricsGroup_converted2.csv")
QnnMeasures <- read.csv(file = "~/Desktop/QualtricsGroup_converted.csv")
library(ggplot2)
library(ggpubr)
ggline(QnnMeasures, x = "group", y = "easy.to.understand", color = "Story",
add = c("mean_se", "jitter"),
palette = c("#00AFBB", "#E7B800"))
ggline(QnnMeasures, x = "group", y = "beautiful", color = "Story",
add = c("mean_se", "jitter"),
palette = c("#00AFBB", "#E7B800"))
mean(QnnMeasures$beautiful[QnnMeasures$Story=="DM" & QnnMeasures$group=="fmri"], na.rm = TRUE)
aovinterest <- aov(interesting ~ group + Story, data = QnnMeasures)
summary(aovinterest)
knitr::opts_chunk$set(echo = TRUE)
allRatingMarked <- read.csv(file = "thesis/AllOriginal_eventMarked.csv", header = T, sep = ",", stringsAsFactors = FALSE)
View(allRatingMarked)
library(ggplot2)
binevent_plot <- ggplot(data = allRatingMarked, aes(x = Onset_event, y = Bin_event, color = Rating)) +
geom_step(direction = "hv", size=0.5) +
xlab("Event Onset Time (in sec)") +
ylab("Binarized Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
binevent_plot
ggsave("~/Desktop/allBinEventRating.png", plot = binevent_plot, device = png(),
scale = 1, width = 400, height = 240, units = c("mm"),
dpi = 300, limitsize = TRUE)
testevent_plot <- ggplot(data = allRatingMarked, aes(x = Onset_event, color = Rating)) +
geom_step(aes(y = MN_event), direction = "hv", size=0.5) +
xlab("Event Onset Time (in sec)") +
ylab("Mean Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
testevent_plot
testevent_plot <- ggplot(data = allRatingMarked, aes(x = Onset_event, color = Rating)) +
geom_step(aes(y = MN_event), direction = "hv", size=0.5) +
xlab("Event Onset Time (in sec)") +
ylab("Mean Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y") +
geom_step(aes(y = Bin_event), direction = "hv", size=0.5) +
xlab("Event Onset Time (in sec)") +
ylab("Binarized Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
testevent_plot
testevent_plot <- ggplot(data = allRatingMarked, aes(x = Onset_event, color = Rating)) +
geom_step(aes(y = MN_event), direction = "hv", size=0.5) +
scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9"))
xlab("Event Onset Time (in sec)") +
ylab("Mean Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y") +
geom_step(aes(y = Bin_event), direction = "hv", size=0.5) +
xlab("Event Onset Time (in sec)") +
ylab("Binarized Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
testevent_plot <- ggplot(data = allRatingMarked, aes(x = Onset_event, color = Rating)) +
geom_step(aes(y = MN_event), direction = "hv", size=0.5) +
scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
xlab("Event Onset Time (in sec)") +
ylab("Mean Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y") +
geom_step(aes(y = Bin_event), direction = "hv", size=0.5) +
xlab("Event Onset Time (in sec)") +
ylab("Binarized Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
testevent_plot
testevent_plot <- ggplot(data = allRatingMarked, aes(x = Onset_event, color = Rating)) +
geom_step(aes(y = MN_event), direction = "hv", size=0.5) +
scale_color_manual(values=c("#D41159", "#1A85FF")) +
xlab("Event Onset Time (in sec)") +
ylab("Mean Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y") +
geom_step(aes(y = Bin_event), direction = "hv", size=0.5) +
xlab("Event Onset Time (in sec)") +
ylab("Binarized Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
testevent_plot
word_plot <- ggplot(data = allRatingMarked, aes(x = Onset, y = MN, color = Rating)) +
geom_point(size=1.5) +
geom_errorbar(limits, width = 0.1, alpha = 0.2) +
scale_color_manual(values=c("#D41159", "#1A85FF")) +
xlab("Word Onset Time (in sec)") +
ylab("Mean Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
event_plot <- ggplot(data = allRatingMarked, aes(x = Onset_event, y = MN_event, color = Rating)) +
geom_step(direction = "hv", size=0.5) +
scale_color_manual(values=c("#D41159", "#1A85FF")) +
xlab("Event Onset Time (in sec)") +
ylab("Mean Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
binevent_plot <- ggplot(data = allRatingMarked, aes(x = Onset_event, y = Bin_event, color = Rating)) +
geom_step(direction = "hv", size=0.5) +
scale_color_manual(values=c("#D41159", "#1A85FF")) +
xlab("Event Onset Time (in sec)") +
ylab("Binarized Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
word_plot
event_plot
binevent_plot
event_plot <- ggplot(data = allRatingMarked, aes(x = Onset_event, y = MN_event, color = Rating)) +
geom_step(direction = "hv", size=0.5, alpha = 0.7) +
scale_color_manual(values=c("#D41159", "#1A85FF")) +
xlab("Event Onset Time (in sec)") +
ylab("Mean Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
binevent_plot <- ggplot(data = allRatingMarked, aes(x = Onset_event, y = Bin_event, color = Rating)) +
geom_step(direction = "hv", size=0.5, alpha = 0.7) +
scale_color_manual(values=c("#D41159", "#1A85FF")) +
xlab("Event Onset Time (in sec)") +
ylab("Binarized Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
word_plot
event_plot
binevent_plot
word_plot <- ggplot(data = allRatingMarked, aes(x = Onset, y = MN, color = Rating)) +
geom_point(size=1.5, alpha = 0.7) +
geom_errorbar(limits, width = 0.1, alpha = 0.2) +
scale_color_manual(values=c("#D41159", "#1A85FF")) +
xlab("Word Onset Time (in sec)") +
ylab("Mean Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
event_plot <- ggplot(data = allRatingMarked, aes(x = Onset_event, y = MN_event, color = Rating)) +
geom_step(direction = "hv", size=0.5, alpha = 0.7) +
scale_color_manual(values=c("#D41159", "#1A85FF")) +
xlab("Event Onset Time (in sec)") +
ylab("Mean Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
binevent_plot <- ggplot(data = allRatingMarked, aes(x = Onset_event, y = Bin_event, color = Rating)) +
geom_step(direction = "hv", size=0.5, alpha = 0.7) +
scale_color_manual(values=c("#D41159", "#1A85FF")) +
xlab("Event Onset Time (in sec)") +
ylab("Binarized Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
word_plot
event_plot
binevent_plot
word_plot <- ggplot(data = allRatingMarked, aes(x = Onset, y = MN, color = Rating)) +
geom_point(size=1.5, alpha = 0.7) +
geom_errorbar(limits, width = 0.1, alpha = 0.2) +
scale_color_manual(values=c("#FFC20A", "#0C7BDC")) +
xlab("Word Onset Time (in sec)") +
ylab("Mean Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
event_plot <- ggplot(data = allRatingMarked, aes(x = Onset_event, y = MN_event, color = Rating)) +
geom_step(direction = "hv", size=0.5, alpha = 0.7) +
scale_color_manual(values=c("#E66100", "#5D3A9B")) +
xlab("Event Onset Time (in sec)") +
ylab("Mean Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
binevent_plot <- ggplot(data = allRatingMarked, aes(x = Onset_event, y = Bin_event, color = Rating)) +
geom_step(direction = "hv", size=0.5, alpha = 0.7) +
scale_color_manual(values=c("#D41159", "#1A85FF")) +
xlab("Event Onset Time (in sec)") +
ylab("Binarized Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
word_plot
event_plot
binevent_plot
word_plot <- ggplot(data = allRatingMarked, aes(x = Onset, y = MN, color = Rating)) +
geom_point(size=1.5, alpha = 0.7) +
geom_errorbar(limits, width = 0.1, alpha = 0.2) +
scale_color_manual(values=c("#FFC20A", "#0C7BDC")) +
xlab("Word Onset Time (in sec)") +
ylab("Mean Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
event_plot <- ggplot(data = allRatingMarked, aes(x = Onset_event, y = MN_event, color = Rating)) +
geom_step(direction = "hv", size=0.5, alpha = 0.7) +
scale_color_manual(values=c("#E66100", "#5D3A9B")) +
xlab("Event Onset Time (in sec)") +
ylab("Mean Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
binevent_plot <- ggplot(data = allRatingMarked, aes(x = Onset_event, y = Bin_event, color = Rating)) +
geom_step(direction = "hv", size=0.5, alpha = 0.7) +
scale_color_manual(values=c("#005AB5", "#DC3220")) +
xlab("Event Onset Time (in sec)") +
ylab("Binarized Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
word_plot
event_plot
binevent_plot
word_plot <- ggplot(data = allRatingMarked, aes(x = Onset, y = MN, color = Rating)) +
geom_point(size=1.5, alpha = 0.7) +
geom_errorbar(limits, width = 0.1, alpha = 0.2) +
scale_color_manual(values=c("#DC3220", "#005AB5")) +
xlab("Word Onset Time (in sec)") +
ylab("Mean Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
event_plot <- ggplot(data = allRatingMarked, aes(x = Onset_event, y = MN_event, color = Rating)) +
geom_step(direction = "hv", size=0.5, alpha = 0.7) +
scale_color_manual(values=c("#DC3220", "#005AB5")) +
xlab("Event Onset Time (in sec)") +
ylab("Mean Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
binevent_plot <- ggplot(data = allRatingMarked, aes(x = Onset_event, y = Bin_event, color = Rating)) +
geom_step(direction = "hv", size=0.5, alpha = 0.7) +
scale_color_manual(values=c("#DC3220", "#005AB5")) +
xlab("Event Onset Time (in sec)") +
ylab("Binarized Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
word_plot
event_plot
binevent_plot
word_plot <- ggplot(data = allRatingMarked, aes(x = Onset, y = MN, color = Rating)) +
geom_point(size=1.5, alpha = 0.7) +
geom_errorbar(limits, width = 0.1, alpha = 0.2) +
scale_color_manual(values=c("#DC3220", "#005AB5")) +
xlab("Word Onset Time (in sec)") +
ylab("Mean Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
event_plot <- ggplot(data = allRatingMarked, aes(x = Onset_event, y = MN_event, color = Rating)) +
geom_step(direction = "hv", size=0.5, alpha = 0.7) +
scale_color_manual(values=c("#DC3220", "#005AB5")) +
xlab("Event Onset Time (in sec)") +
ylab("Mean Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
binevent_plot <- ggplot(data = allRatingMarked, aes(x = Onset_event, y = Bin_event, color = Rating)) +
geom_step(direction = "hv", size=0.5, alpha = 0.7) +
scale_color_manual(values=c("#DC3220", "#005AB5")) +
xlab("Event Onset Time (in sec)") +
ylab("Binarized Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
word_plot
event_plot
binevent_plot
ggsave("~/Desktop/allWordRating.png", plot = word_plot, device = png(),
scale = 1, width = 400, height = 240, units = c("mm"),
dpi = 300, limitsize = TRUE)
ggsave("~/Desktop/allEventRating.png", plot = event_plot, device = png(),
scale = 1, width = 400, height = 240, units = c("mm"),
dpi = 300, limitsize = TRUE)
ggsave("~/Desktop/allBinEventRating.png", plot = binevent_plot, device = png(),
scale = 1, width = 400, height = 240, units = c("mm"),
dpi = 300, limitsize = TRUE)
event_plot <- ggplot(data = allRatingMarked, aes(x = Onset_event, y = MN_event, color = Rating)) +
geom_step(direction = "hv", size=0.5, alpha = 0.8) +
scale_color_manual(values=c("#DC3220", "#005AB5")) +
xlab("Event Onset Time (in sec)") +
ylab("Mean Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
binevent_plot <- ggplot(data = allRatingMarked, aes(x = Onset_event, y = Bin_event, color = Rating)) +
geom_step(direction = "hv", size=0.5, alpha = 0.8) +
scale_color_manual(values=c("#DC3220", "#005AB5")) +
xlab("Event Onset Time (in sec)") +
ylab("Binarized Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
ggsave("~/Desktop/allBinEventRating.png", plot = binevent_plot, device = png(),
scale = 1, width = 400, height = 240, units = c("mm"),
dpi = 300, limitsize = TRUE)
word_plot <- ggplot(data = allRatingMarked, aes(x = Onset, y = MN, color = Rating)) +
geom_point(size=1.5, alpha = 0.7) +
geom_errorbar(limits, width = 0.1, alpha = 0.2) +
scale_color_manual(values=c("#DC3220", "#005AB5")) +
xlab("Word Onset Time (in sec)") +
ylab("Mean Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
event_plot <- ggplot(data = allRatingMarked, aes(x = Onset_event, y = MN_event, color = Rating)) +
geom_step(direction = "hv", size=0.5, alpha = 0.8) +
scale_color_manual(values=c("#DC3220", "#005AB5")) +
xlab("Event Onset Time (in sec)") +
ylab("Mean Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
binevent_plot <- ggplot(data = allRatingMarked, aes(x = Onset_event, y = Bin_event, color = Rating)) +
geom_step(direction = "hv", size=0.5, alpha = 0.8) +
scale_color_manual(values=c("#DC3220", "#005AB5")) +
xlab("Event Onset Time (in sec)") +
ylab("Binarized Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
word_plot
event_plot
binevent_plot
ggsave("~/Desktop/allWordRating.png", plot = word_plot, device = png(),
scale = 1, width = 400, height = 240, units = c("mm"),
dpi = 300, limitsize = TRUE)
ggsave("~/Desktop/allEventRating.png", plot = event_plot, device = png(),
scale = 1, width = 400, height = 240, units = c("mm"),
dpi = 300, limitsize = TRUE)
ggsave("~/Desktop/allBinEventRating.png", plot = binevent_plot, device = png(),
scale = 1, width = 400, height = 240, units = c("mm"),
dpi = 300, limitsize = TRUE)
ggsave("~/Desktop/allBinEventRating.png", plot = binevent_plot, device = png(),
scale = 1, width = 400, height = 100, units = c("mm"),
dpi = 300, limitsize = TRUE)
binevent_plot <- ggplot(data = allRatingMarked, aes(x = Onset_event, y = Bin_event, color = Rating)) +
geom_step(direction = "hv", size=0.5, alpha = 0.8) +
scale_color_manual(values=c("#DC3220", "#005AB5")) +
xlab("Event Onset Time (in sec)") +
ylab("Binarized Rating") +
scale_y_continuous(breaks=c(0,1))
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
binevent_plot <- ggplot(data = allRatingMarked, aes(x = Onset_event, y = Bin_event, color = Rating)) +
geom_step(direction = "hv", size=0.5, alpha = 0.8) +
scale_color_manual(values=c("#DC3220", "#005AB5")) +
xlab("Event Onset Time (in sec)") +
ylab("Binarized Rating") +
scale_y_continuous(breaks=c(0,1))
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story)
binevent_plot <- ggplot(data = allRatingMarked, aes(x = Onset_event, y = Bin_event, color = Rating)) +
geom_step(direction = "hv", size=0.5, alpha = 0.8) +
scale_color_manual(values=c("#DC3220", "#005AB5")) +
xlab("Event Onset Time (in sec)") +
ylab("Binarized Rating") +
scale_y_continuous(breaks=c(0,1)) +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
binevent_plot
ggsave("~/Desktop/allBinEventRating.png", plot = binevent_plot, device = png(),
scale = 1, width = 400, height = 100, units = c("mm"),
dpi = 300, limitsize = TRUE)
ggsave("~/Desktop/allBinEventRating.png", plot = binevent_plot, device = png(),
scale = 1, width = 400, height = 120, units = c("mm"),
dpi = 300, limitsize = TRUE)
event_plot <- ggplot(data = allRatingMarked, aes(x = Onset_event, y = MN_event, color = Rating)) +
geom_step(direction = "hv", size=0.5, alpha = 0.8) +
scale_color_manual(values=c("#DC3220", "#005AB5")) +
xlab("Event Onset Time (in sec)") +
ylab("Mean Rating") +
scale_y_continuous(limits = c(1,2)) +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
ggsave("~/Desktop/allEventRating.png", plot = event_plot, device = png(),
scale = 1, width = 400, height = 240, units = c("mm"),
dpi = 300, limitsize = TRUE)
event_plot <- ggplot(data = allRatingMarked, aes(x = Onset_event, y = MN_event, color = Rating)) +
geom_step(direction = "hv", size=0.5, alpha = 0.8) +
scale_color_manual(values=c("#DC3220", "#005AB5")) +
xlab("Event Onset Time (in sec)") +
ylab("Mean Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
ggsave("~/Desktop/allEventRating.png", plot = event_plot, device = png(),
scale = 1, width = 400, height = 240, units = c("mm"),
dpi = 300, limitsize = TRUE)
knitr::opts_chunk$set(echo = TRUE)
for (i in 1:nrow(allRatingMarked)) {
if (allRatingMarked$Rating[i] == "Literariness") {
allRatingMarked$SE[i] = 0
}
library(ggplot2)
limits <- aes(ymax = allRatingMarked$MN + allRatingMarked$SE,
ymin = allRatingMarked$MN - allRatingMarked$SE)
word_plot <- ggplot(data = allRatingMarked, aes(x = Onset, y = MN, color = Rating)) +
geom_point(size=1.5, alpha = 0.7) +
geom_errorbar(limits, width = 0.1, alpha = 0.2) +
scale_color_manual(values=c("#DC3220", "#005AB5")) +
xlab("Word Onset Time (in sec)") +
ylab("Mean Rating") +
theme(text = element_text(size=15),  axis.ticks.x=element_blank(), legend.position="bottom") +
facet_grid(Rating ~ Story, scales = "free_y")
ggsave("~/Desktop/allWordRating.png", plot = word_plot, device = png(),
scale = 1, width = 400, height = 240, units = c("mm"),
dpi = 300, limitsize = TRUE)
