TempDM <- as.matrix(TempDM)
TempDM <- t(TempDM)
colnames(TempDM) <- TempDM[1, ]
TempDM <- TempDM[-1,]
TempDM <- as.data.frame(TempDM)
TempDM <- gather(TempDM, "qnNum", "word", 1:8)
TempDM <- TempDM[!(TempDM$word == ""), ]
TempDM <- TempDM[, c("word","qnNum")]
ResultDM <- TempDM
length(ResultDM)
size(ResultDM)
nrow(ResultDM)
totalWord <- nrow(ResultDM)
totalWord <- as.numeric(nrow(ResultDM))
TempDM <- read.csv(file = "forSeparationIntoColumns.csv", header = F, sep = ",")
TempDM <- TempDM[-c(9:13),]
TempDM[] <- lapply(TempDM, as.character) #set data type from factor to character
TempDM <- as.data.frame(TempDM)
TempDM <- t(TempDM)
colnames(TempDM) <- TempDM[1, ]
TempDM <- TempDM[-1,]
#TempDM <- as.data.frame(TempDM)
TempDM <- gather(TempDM, "qnNum", "word", 1:8)
TempDM <- read.csv(file = "forSeparationIntoColumns.csv", header = F, sep = ",")
TempDM <- TempDM[-c(9:13),]
TempDM[] <- lapply(TempDM, as.character) #set data type from factor to character
TempDM <- as.data.frame(TempDM)
TempDM <- t(TempDM)
colnames(TempDM) <- TempDM[1, ]
TempDM <- TempDM[-1,]
TempDM <- as.data.frame(TempDM)
TempDM <- gather(TempDM, "qnNum", "word", 1:8)
TempDM <- TempDM[!(TempDM$word == ""), ]
TempDM <- TempDM[, c("word","qnNum")]
ResultDM <- TempDM
totalWord <- as.numeric(nrow(ResultDM))
#This chunk prepares the list of words
EmoDM <- read.csv(file="thesis/Verhalen_Emotional Arousal_De Muur_July 11, 2019_13.08.csv", header=TRUE, sep=",")
#str(EmoDM)
EmoDM <- EmoDM[-c(1:8),]
TempDM <- read.csv(file = "forSeparationIntoColumns.csv", header = F, sep = ",")
TempDM <- TempDM[-c(9:13),]
TempDM[] <- lapply(TempDM, as.character) #set data type from factor to character
TempDM <- as.data.frame(TempDM)
str(TempDM)
TempDM <- t(TempDM)
colnames(TempDM) <- TempDM[1, ]
TempDM <- TempDM[-1,]
str(TempDM)
TempDM <- as.data.frame(TempDM)
TempDM <- gather(TempDM, "qnNum", "word", 1:8)
TempDM <- TempDM[!(TempDM$word == ""), ]
TempDM <- TempDM[, c("word","qnNum")]
ResultDM <- TempDM
totalWord <- as.numeric(nrow(ResultDM))
#This chunk prepares the list of words
EmoDM <- read.csv(file="thesis/Verhalen_Emotional Arousal_De Muur_July 11, 2019_13.08.csv", header=TRUE, sep=",")
#str(EmoDM)
EmoDM <- EmoDM[-c(1:8),]
TempDM <- read.csv(file = "forSeparationIntoColumns.csv", header = F, sep = ",")
TempDM <- TempDM[-c(9:13),]
TempDM[] <- lapply(TempDM, as.character) #set data type from factor to character
TempDM <- as.data.frame(TempDM)
TempDM <- t(TempDM)
colnames(TempDM) <- TempDM[1, ]
TempDM <- TempDM[-1,]
TempDM <- as.data.frame(TempDM)
TempDM <- gather(TempDM, "qnNum", "word", 1:8)
TempDM <- TempDM[!(TempDM$word == ""), ]
TempDM <- TempDM[, c("word","qnNum")]
ResultDM <- TempDM
totalWord <- as.numeric(nrow(ResultDM))
TempDM <- read.csv(file = "forSeparationIntoColumns.csv", header = F, sep = ",")
TempDM <- TempDM[-c(9:13),] #manually getting rid of survey preview results - sorry
TempDM[] <- lapply(TempDM, as.character) #set data type from factor to character
TempDM <- as.data.frame(TempDM)
TempDM <- t(TempDM)
str(TempDM)
colnames(TempDM) <- TempDM[1, ]
TempDM <- TempDM[-1, ]
TempDM <- as.data.frame(TempDM)
TempDM <- gather(TempDM, "qnNum", "word", 1:8)
TempDM <- TempDM[!(TempDM$word == ""), ]
TempDM <- TempDM[ , c("word","qnNum")]
ResultDM <- TempDM
totalWord <- as.numeric(nrow(ResultDM))
head(ResultDM)
rownames(ResultDM)
View(EmoDM)
View(ResultDM)
ResultDM[1400,]
ResultDM[1200,]
ResultDM[1117,]
as.factor(ResultDM$qnNum)
head(ResultDM)
str(ResultDM)
ResultDM <- as.factor(ResultDM$qnNum)
str(ResultDM)
str(ResultDM)
head(ResultDM)
dim(TempDM)
names(TempDM)
sapply(TempDM, class)
totalWord <- as.integer(nrow(ResultDM))
totalWord <- as.integer(nrow(ResultDM))
#-------------------------------------------------------
ResultDM <- TempDM
totalWord <- as.integer(nrow(ResultDM))
names(TempDM)
sapply(TempDM, class)
sapply(TempDM, typeof)
sapply(TempDM, attributes)
totalWord <- nrow(ResultDM)
anyNA(TempDM)
class(TempDM)
typeof(TempDM)
class(TempDM
class(TempDM)
class(TempDM)
as.list(TempDM)
class(TempDM)
#This chunk prepares the list of words
EmoDM <- read.csv(file="thesis/Verhalen_Emotional Arousal_De Muur_July 11, 2019_13.08.csv", header=TRUE, sep=",", stringsAsFactors = FALSE)
#str(EmoDM)
EmoDM <- EmoDM[-c(1:8),]
#-------------------------------------------------------
TempDM <- read.csv(file = "forSeparationIntoColumns.csv", header = F, sep = ",", stringsAsFactors = FALSE)
TempDM <- TempDM[-c(9:13),] #manually getting rid of survey preview results - sorry
head(TempDM)
#TempDM[] <- lapply(TempDM, as.character) #set data type from factor to character
class(TempDM)
#TempDM[] <- lapply(TempDM, as.character) #set data type from factor to character
TempDM <- t(TempDM)
head(TempDM)
colnames(TempDM) <- TempDM[1, ]
TempDM <- TempDM[-1, ]
head(TempDM)
class(TempDM)
TempDM <- gather(TempDM, "qnNum", "word", 1:8)
TempDM <- as.data.frame(TempDM) #data type converted to matrix after transpose, due to rectangular shape - force back into data frame for "gather"
TempDM <- gather(TempDM, "qnNum", "word", 1:8)
TempDM <- TempDM[complete.cases(TempDM), ]
TempDM <- TempDM[complete.cases(TempDM)]
TempDM <- read.csv(file = "forSeparationIntoColumns.csv", header = F, sep = ",", stringsAsFactors = FALSE)
TempDM <- TempDM[-c(9:13),] #manually getting rid of survey preview results - sorry
#TempDM[] <- lapply(TempDM, as.character) #set data type from factor to character
TempDM <- t(TempDM)
colnames(TempDM) <- TempDM[1, ]
TempDM <- TempDM[-1, ]
TempDM <- as.data.frame(TempDM) #data type converted to matrix after transpose, due to rectangular shape - force back into data frame for "gather"
TempDM <- gather(TempDM, "qnNum", "word", 1:8)
TempDM <- TempDM[!(TempDM$word == ""), ]
TempDM <- TempDM[ , c("word","qnNum")]
dim(ResultDM)
ResultDM[3,1] <- 2
View(ResultDM)
#-------------------------------------------------------
ResultDM <- TempDM
ResultDM[1,3] <- 2
ResultDM["1407","word"]
View(EmoDM)
class(EmoDM)
totalResponse <- nrow(EmoDM)
TempDM$qnNum <- as.factor(TempDM$qnNum)
str(TempDM)
levels(TempDM$qnNum)
TempDM$qnNum <- factor(TempDM$qnNum, levels = "3.1","5.1","7.1","9.1","11.1","13.1","15.1","17.1")
str(TempDM)
TempDM$qnNum <- factor(TempDM$qnNum, levels = "3.1","5.1","7.1","9.1","11.1","13.1","15.1","17.1")
TempDM$qnNum <- factor(TempDM$qnNum, levels = c("3.1","5.1","7.1","9.1","11.1","13.1","15.1","17.1"))
str(TempDM)
#-------------------------------------------------------
q1 <- nrow(TempDM[ , TempDM$qnNum == 1])
#-------------------------------------------------------
q1 <- nrow(TempDM[ , TempDM$qnNum == "3.1"])
#-------------------------------------------------------
q1 <- nrow(TempDM[ , TempDM$qnNum == 2])
#-------------------------------------------------------
q1 <- nrow(TempDM[TempDM$qnNum == 2, ])
#-------------------------------------------------------
q1 <- nrow(TempDM[TempDM$qnNum == "3.1", ])
#str(TempDM)
typeof(TempDM$qnNum)
#str(TempDM)
class(TempDM$qnNum)
TempDM <- read.csv(file = "forSeparationIntoColumns.csv", header = F, sep = ",", stringsAsFactors = FALSE)
TempDM <- TempDM[-c(9:13),] #manually getting rid of survey preview results - sorry
TempDM <- t(TempDM)
colnames(TempDM) <- TempDM[1, ]
TempDM <- TempDM[-1, ]
TempDM <- as.data.frame(TempDM) #data type converted to matrix after transpose, due to rectangular shape - force back into data frame for "gather"
TempDM <- gather(TempDM, "qnNum", "word", 1:8)
TempDM <- TempDM[!(TempDM$word == ""), ]
TempDM <- TempDM[ , c("word","qnNum")]
q1 <- nrow(TempDM[TempDM$qnNum == "3.1", ])
q1 <- nrow(TempDM[TempDM$qnNum == "3.1", ])
q2 <- nrow(TempDM[TempDM$qnNum == "5.1", ])
ResultDM <- TempDM
TempDM$qnNum <- as.factor(TempDM$qnNum)
q2 <- nrow(TempDM[TempDM$qnNum == "5.1", ])
TempDM$qnNum <- factor(TempDM$qnNum, levels = c("3.1","5.1","7.1","9.1","11.1","13.1","15.1","17.1"))
q2 <- nrow(TempDM[TempDM$qnNum == "5.1", ])
#str(TempDM)
qnDM <- levels(TempDM$qnNum)
q2 <- nrow(TempDM[TempDM$qnNum == qnDM[1,2], ])
q2 <- nrow(ResultDM[ResultDM$qnNum == qnDM[1,2], ])
q2 <- nrow(ResultDM[ResultDM$qnNum == "3.1", ])
q2 <- nrow(ResultDM[ResultDM$qnNum == qnDM(3), ])
q2 <- nrow(ResultDM[ResultDM$qnNum == qnDM[3], ])
q2 <- nrow(ResultDM[ResultDM$qnNum == qnDM[2], ])
q2 <- nrow(ResultDM[ResultDM$qnNum == qnDM[1], ])
q2 <- nrow(ResultDM[ResultDM$qnNum == qnDM[2], ])
ResultDM[1,1]
grep("1: Met", ResultDM)
grep("2: mijn", ResultDM)
grep("2: min", ResultDM)
grep("2: mijn", ResultDM)
grep("2: mijn", ResultDM, fixed = T)
grep("2: mi", ResultDM, fixed = T)
grep("2: i", ResultDM, fixed = T)
grep("2: i", ResultDM)
grepl("2: i", ResultDM)
i
grepl("2: mi", ResultDM)
grepl("mijn", ResultDM)
grepl("mijn", ResultDM)
grepl("mijn", ResultDM, fixed = TRUE)
grepl("mijn", ResultDM[1,1], fixed = TRUE)
grepl("mijn", ResultDM[2,1], fixed = TRUE)
q2 <- rownames(ResultDM[ResultDM$qnNum == qnDM[2], ])
ls()
rm(list=ls())
#This chunk prepares the list of words
emoDM <- read.csv(file="thesis/Verhalen_Emotional Arousal_De Muur_July 11, 2019_13.08.csv", header=TRUE, sep=",", stringsAsFactors = FALSE)
#str(EmoDM)
emoDM <- emoDM[-c(1:8),] #manually getting rid of survey preview results
#-------------------------------------------------------
tempDM <- read.csv(file = "forSeparationIntoColumns.csv", header = F, sep = ",", stringsAsFactors = FALSE)
tempDM <- tempDM[-c(9:13),] #getting rid of some leftover data
tempDM <- t(tempDM)
colnames(tempDM) <- tempDM[1, ]
tempDM <- tempDM[-1, ]
tempDM <- as.data.frame(tempDM) #data type converted to matrix after transpose, due to rectangular shape - force back into data frame for "gather"
tempDM <- gather(tempDM, "qnNum", "word", 1:8)
tempDM <- tempDM[!(tempDM$word == ""), ]
tempDM <- tempDM[ , c("word","qnNum")]
tempDM$qnNum <- as.factor(tempDM$qnNum)
tempDM$qnNum <- factor(tempDM$qnNum, levels = c("3.1","5.1","7.1","9.1","11.1","13.1","15.1","17.1"))
#str(TempDM)
qnDM <- levels(tempDM$qnNum)
#-------------------------------------------------------
for (indexResponse in 1:totalResponse)
{
statement
}
View(emoDM)
View(tempDM)
totalResponse <- nrow(emoDM)
totalWord <- nrow(tempDM)
resultDM <- tempDM
View(emoDM)
for (i in 1:8) {
for (j in 1:7) {
a <- rbind("Q", qnDM[i], "_", j)
a
}
}
View(a)
for (i in 1:8) {
for (j in 1:7) {
a <- rbind("Q", qnDM[i], "_", j)
print(a)
}
}
#for (indexResponse in 1:totalResponse)
currentColName <- paste ("Q", qnDM[i], "_", "1", sep = "", collapse = NULL)
View(a)
substr(currentColName, nchar(currentColName), nchar(currentColName))
size(qnDM)
nrow(qnDM)
ncol(qnDM)
dim(qnDM)
length(qnDM)
for (indexWord in 1:totalWord) {
targetWord <- tempDM[indexWord,1]
targetWord
}
#for
for (indexWord in 1:totalWord) {
targetWord <- tempDM[indexWord,1]
print(targetWord)
}
q2 <- rownames(resultDM[resultDM$qnNum == qnDM[2], ])
#for (indexResponse in 1:totalParticipant)
resultDM[1, currentColName]
#for (indexResponse in 1:totalParticipant)
resultDM[2, currentColName]
#for (indexResponse in 1:totalParticipant)
resultDM[2, "Q17.1_1"]
View(resultDM)
#for (indexResponse in 1:totalParticipant)
emoDM[2, "Q17.1_1"]
#for (indexResponse in 1:totalParticipant)
emoDM[3, "Q17.1_1"]
#for (indexResponse in 1:totalParticipant)
emoDM[3, currentColName]
View(resultDM)
View(resultDM)
View(tempDM)
View(a)
View(resultDM)
for (indexWord in 1:totalWord) {
searchWord <- tempDM[indexWord,1]
searchQn <- tempDM[indexWord,2]
for (possibleRating in 1:7) {
if (!is.na(resultDM[indexWord,3])) {
break
}
currentColName <- paste ("Q", searchQn, "_", possibleRating, sep = "", collapse = NULL)
if (grepl(searchWord, emoDM[1,currentColName], fixed = TRUE)) {
resultDM[indexWord,3] <- substr(currentColName, nchar(currentColName), nchar(currentColName))
}
else {
if ((possibleRating == 7) & (is.na(resultDM[indexWord,3]))) {
resultDM[indexWord,3] <- 0
}
}
}
}
for (indexWord in 1:totalWord) {
searchWord <- tempDM[indexWord,1]
searchQn <- tempDM[indexWord,2]
resultDM[indexWord,3] <- NA
for (possibleRating in 1:7) {
if (!is.na(resultDM[indexWord,3])) {
break
}
currentColName <- paste ("Q", searchQn, "_", possibleRating, sep = "", collapse = NULL)
if (grepl(searchWord, emoDM[1,currentColName], fixed = TRUE)) {
resultDM[indexWord,3] <- substr(currentColName, nchar(currentColName), nchar(currentColName))
}
else {
if ((possibleRating == 7) & (is.na(resultDM[indexWord,3]))) {
resultDM[indexWord,3] <- 0
}
}
}
}
for (indexResponse in 1:totalParticipant) {
for (indexWord in 1:totalWord) {
searchWord <- tempDM[indexWord,1]
searchQn <- tempDM[indexWord,2]
resultCol <- indexResponse+2
resultDM[indexWord,resultCol] <- NA #initialize a new column
for (possibleRating in 1:7) {
if (!is.na(resultDM[indexWord,resultCol])) {
break
}
currentColName <- paste ("Q", searchQn, "_", possibleRating, sep = "", collapse = NULL)
if (grepl(searchWord, emoDM[1,currentColName], fixed = TRUE)) {
resultDM[indexWord,resultCol] <- substr(currentColName, nchar(currentColName), nchar(currentColName))
}
else {
if ((possibleRating == 7) & (is.na(resultDM[indexWord,3]))) {
resultDM[indexWord,resultCol] <- 0
}
}
}
}
}
totalParticipant <- nrow(emoDM)
totalWord <- nrow(tempDM)
resultDM <- tempDM
for (indexResponse in 1:totalParticipant) {
for (indexWord in 1:totalWord) {
searchWord <- tempDM[indexWord,1]
searchQn <- tempDM[indexWord,2]
resultCol <- indexResponse+2
resultDM[indexWord,resultCol] <- NA #initialize a new column
for (possibleRating in 1:7) {
if (!is.na(resultDM[indexWord,resultCol])) {
break
}
currentColName <- paste ("Q", searchQn, "_", possibleRating, sep = "", collapse = NULL)
if (grepl(searchWord, emoDM[1,currentColName], fixed = TRUE)) {
resultDM[indexWord,resultCol] <- substr(currentColName, nchar(currentColName), nchar(currentColName))
}
else {
if ((possibleRating == 7) & (is.na(resultDM[indexWord,3]))) {
resultDM[indexWord,resultCol] <- 0
}
}
}
}
}
for (indexResponse in 1:totalParticipant) {
for (indexWord in 1:totalWord) {
searchWord <- tempDM[indexWord,1]
searchQn <- tempDM[indexWord,2]
resultCol <- indexResponse+2
resultDM[indexWord,resultCol] <- NA #initialize a new column
for (possibleRating in 1:7) {
if (!is.na(resultDM[indexWord,resultCol])) {
break
}
currentColName <- paste ("Q", searchQn, "_", possibleRating, sep = "", collapse = NULL)
if (grepl(searchWord, emoDM[indexResponse,currentColName], fixed = TRUE)) {
resultDM[indexWord,resultCol] <- substr(currentColName, nchar(currentColName), nchar(currentColName))
}
else {
if ((possibleRating == 7) & (is.na(resultDM[indexWord,resultCol]))) {
resultDM[indexWord,resultCol] <- 0
}
}
}
}
}
rm(list = ls())
#This chunk prepares the list of words
emoDM <- read.csv(file="thesis/Verhalen_Emotional Arousal_De Muur_July 11, 2019_13.08.csv",
header = TRUE, sep = ",", stringsAsFactors = FALSE)
emoDM <- emoDM[-c(1:8),] #manually getting rid of survey preview results
#-------------------------------------------------------
tempDM <- read.csv(file = "forSeparationIntoColumns.csv", header = F, sep = ",", stringsAsFactors = FALSE)
tempDM <- tempDM[-c(9:13), ] #getting rid of some leftover data
tempDM <- t(tempDM)
colnames(tempDM) <- tempDM[1, ]
tempDM <- tempDM[-1, ]
tempDM <- as.data.frame(tempDM) #data type converted to matrix after transpose, due to rectangular shape - force back into data frame for "gather"
tempDM <- gather(tempDM, "qnNum", "word", 1:8)
tempDM <- tempDM[!(tempDM$word == ""), ]
tempDM <- tempDM[ , c("word","qnNum")]
tempDM$qnNum <- as.factor(tempDM$qnNum)
tempDM$qnNum <- factor(tempDM$qnNum, levels = c("3.1","5.1","7.1","9.1","11.1","13.1","15.1","17.1"))
#str(TempDM)
qnDM <- levels(tempDM$qnNum)
#-------------------------------------------------------
totalParticipant <- nrow(emoDM)
totalWord <- nrow(tempDM)
resultDM <- tempDM
for (indexResponse in 1:totalParticipant) {
for (indexWord in 1:totalWord) {
searchWord <- tempDM[indexWord,1]
searchQn <- tempDM[indexWord,2]
resultCol <- indexResponse+2
resultDM[indexWord,resultCol] <- NA #initialize a new column
for (possibleRating in 1:7) {
if (!is.na(resultDM[indexWord,resultCol])) {
break
}
currentColName <- paste ("Q", searchQn, "_", possibleRating, sep = "", collapse = NULL)
if (grepl(searchWord, emoDM[indexResponse,currentColName], fixed = TRUE)) {
resultDM[indexWord,resultCol] <- substr(currentColName, nchar(currentColName), nchar(currentColName))
}
else {
if ((possibleRating == 7) & (is.na(resultDM[indexWord,resultCol]))) {
resultDM[indexWord,resultCol] <- 0
}
}
}
}
}
#q2 <- rownames(resultDM[resultDM$qnNum == qnDM[2], ])
View(resultDM)
#This chunk prepares the list of words
emoDM <- read.csv(file="thesis/Verhalen_Emotional Arousal_De Muur_July 11, 2019_13.08.csv",
header = TRUE, sep = ",", stringsAsFactors = FALSE)
#emoDM <- emoDM[-c(1:8),] #manually getting rid of survey preview results
#-------------------------------------------------------
tempDM <- read.csv(file = "forSeparationIntoColumns.csv", header = F, sep = ",", stringsAsFactors = FALSE)
tempDM <- tempDM[-c(9:13), ] #getting rid of some leftover data
tempDM <- t(tempDM)
colnames(tempDM) <- tempDM[1, ]
tempDM <- tempDM[-1, ]
tempDM <- as.data.frame(tempDM) #data type converted to matrix after transpose, due to rectangular shape - force back into data frame for "gather"
tempDM <- gather(tempDM, "qnNum", "word", 1:8)
tempDM <- tempDM[!(tempDM$word == ""), ]
tempDM <- tempDM[ , c("word","qnNum")]
tempDM$qnNum <- as.factor(tempDM$qnNum)
tempDM$qnNum <- factor(tempDM$qnNum, levels = c("3.1","5.1","7.1","9.1","11.1","13.1","15.1","17.1"))
#str(TempDM)
qnDM <- levels(tempDM$qnNum)
#-------------------------------------------------------
totalParticipant <- nrow(emoDM)
totalWord <- nrow(tempDM)
resultDM <- tempDM
for (indexResponse in 1:totalParticipant) {
for (indexWord in 1:totalWord) {
searchWord <- tempDM[indexWord,1]
searchQn <- tempDM[indexWord,2]
resultCol <- indexResponse+2
resultDM[indexWord,resultCol] <- NA #initialize a new column
for (possibleRating in 1:7) {
if (!is.na(resultDM[indexWord,resultCol])) {
break
}
currentColName <- paste ("Q", searchQn, "_", possibleRating, sep = "", collapse = NULL)
if (grepl(searchWord, emoDM[indexResponse,currentColName], fixed = TRUE)) {
resultDM[indexWord,resultCol] <- substr(currentColName, nchar(currentColName), nchar(currentColName))
}
else {
if ((possibleRating == 7) & (is.na(resultDM[indexWord,resultCol]))) {
resultDM[indexWord,resultCol] <- 0
}
}
}
}
}
#q2 <- rownames(resultDM[resultDM$qnNum == qnDM[2], ])
View(emoDM)
library("ggplot2")
library('tidyr')
