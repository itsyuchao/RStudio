return(dataEventMarked)
}
DHOmarked <- addEventParam(DHOmarked)
DH2Vmarked <- addEventParam(DH2Vmarked)
DMOmarked <- addEventParam(DMOmarked)
DM2Vmarked <- addEventParam(DM2Vmarked)
write.csv(DHOmarked, file = "thesis/emoDHOFinal_eventMarked.csv", na = "")
write.csv(DH2Vmarked, file = "thesis/emoDH2VFinal_eventMarked.csv", na = "")
write.csv(DMOmarked, file = "thesis/emoDMOFinal_eventMarked.csv", na = "")
write.csv(DM2Vmarked, file = "thesis/emoDM2VFinal_eventMarked.csv", na = "")
DHOmarked <- read.csv(file = "thesis/litDHOFinal_eventMarked.csv", header = T, sep = ",", stringsAsFactors = FALSE)
DH2Vmarked <- read.csv(file = "thesis/litDH2VFinal_eventMarked.csv", header = T, sep = ",", stringsAsFactors = FALSE)
DMOmarked <- read.csv(file = "thesis/litDMOFinal_eventMarked.csv", header = T, sep = ",", stringsAsFactors = FALSE)
DM2Vmarked <- read.csv(file = "thesis/litDM2VFinal_eventMarked.csv", header = T, sep = ",", stringsAsFactors = FALSE)
addEventParam <- function(dataEventMarked) {
#initialize condition for search
begin_row <- 1
end_row <- 1
total_row <- nrow(dataEventMarked)
#search loop
while (end_row <= total_row) {
if  (is.na(dataEventMarked$marker_event[end_row])) {
end_row <- end_row+1
}
else {
dataEventMarked$onset_event[end_row] <- dataEventMarked$Onset[begin_row]
dataEventMarked$duration_event[end_row] <- sum(dataEventMarked$Duration[begin_row:end_row])
dataEventMarked$MN_event[end_row] <- mean(dataEventMarked$MN[begin_row:end_row], na.rm = TRUE)
begin_row <- end_row+1
end_row <- end_row+1
}
}
return(dataEventMarked)
}
DHOmarked <- addEventParam(DHOmarked)
DH2Vmarked <- addEventParam(DH2Vmarked)
DMOmarked <- addEventParam(DMOmarked)
DM2Vmarked <- addEventParam(DM2Vmarked)
write.csv(DHOmarked, file = "thesis/litDHOFinal_eventMarked.csv", na = "")
write.csv(DH2Vmarked, file = "thesis/litDH2VFinal_eventMarked.csv", na = "")
write.csv(DMOmarked, file = "thesis/litDMOFinal_eventMarked.csv", na = "")
write.csv(DM2Vmarked, file = "thesis/litDM2VFinal_eventMarked.csv", na = "")
View(litResultClean)
View(emoDHOFinal)
#Visualize ratings against time----
library(ggplot2)
library(psych)
dotWithErrorPlotSave <- function(trend, plotTitle, shortTitle) {
dodge <- position_dodge(width = 0.9)
limits <- aes(ymax = trend$MN + trend$SE,
ymin = trend$MN - trend$SE)
ggplot(data = trend, aes(x = Onset, y = MN, color = Onset)) +
geom_point(size=2.5, alpha=0.5, color = "orange") +
geom_errorbar(limits, position = dodge, width = 0.25) +
xlab("Word Onset Time(s)") +
theme(text = element_text(size=20), axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
ggtitle(paste(plotTitle, ", N=", ncol(trend)-6, sep=""))
ggsave(paste("~/Desktop/", shortTitle,".png", sep = ""), plot = last_plot(), device = png(),
scale = 1, width = 300, height = 200, units = c("mm"),
dpi = 300, limitsize = TRUE)
}
#EMO
dotWithErrorPlotSave(emoDHOFinal, "Emotional Arousal Rating for De Mexicaanse Hond", "emoDHtime")
dotWithErrorPlotSave(emoDMOFinal, "Emotional Arousal Rating for De Muur", "emoDMtime")
#LIT
dotWithErrorPlotSave(litDHOFinal, "Literariness Rating for De Mexicaanse Hond", "emoDHtime")
dotWithErrorPlotSave(litDMOFinal, "Literariness Rating for De Muur", "emoDMtime")
#Visualize ratings against time----
library(ggplot2)
library(psych)
dotWithErrorPlotSave <- function(trend, plotTitle, shortTitle) {
dodge <- position_dodge(width = 0.9)
limits <- aes(ymax = trend$MN + trend$SE,
ymin = trend$MN - trend$SE)
ggplot(data = trend, aes(x = Onset, y = MN, color = "blue")) +
geom_point(size=2.5, alpha=0.5, color = "orange") +
geom_errorbar(limits, position = dodge, width = 0.25) +
xlab("Word Onset Time(s)") +
theme(text = element_text(size=20), axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
ggtitle(paste(plotTitle, ", N=", ncol(trend)-6, sep=""))
ggsave(paste("~/Desktop/", shortTitle,".png", sep = ""), plot = last_plot(), device = png(),
scale = 1, width = 300, height = 200, units = c("mm"),
dpi = 300, limitsize = TRUE)
}
#EMO
dotWithErrorPlotSave(emoDHOFinal, "Emotional Arousal Rating for De Mexicaanse Hond", "emoDHtime")
dotWithErrorPlotSave(emoDMOFinal, "Emotional Arousal Rating for De Muur", "emoDMtime")
#LIT
dotWithErrorPlotSave(litDHOFinal, "Literariness Rating for De Mexicaanse Hond", "emoDHtime")
dotWithErrorPlotSave(litDMOFinal, "Literariness Rating for De Muur", "emoDMtime")
#Visualize ratings against time----
library(ggplot2)
library(psych)
dotWithErrorPlotSave <- function(trend, plotTitle, shortTitle) {
dodge <- position_dodge(width = 0.9)
limits <- aes(ymax = trend$MN + trend$SE,
ymin = trend$MN - trend$SE)
ggplot(data = trend, aes(x = Onset, y = MN, color = "blue")) +
geom_point(size=2.5, alpha=0.5, color = "orange") +
geom_errorbar(limits, position = dodge, width = 0.25) +
xlab("Word Onset Time(s)") +
theme(text = element_text(size=20), axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
ggtitle(paste(plotTitle, ", N=", ncol(trend)-6, sep=""))
ggsave(paste("~/Desktop/", shortTitle,".png", sep = ""), plot = last_plot(), device = png(),
scale = 1, width = 300, height = 200, units = c("mm"),
dpi = 300, limitsize = TRUE)
}
#EMO
dotWithErrorPlotSave(emoDHOFinal, "Emotional Arousal Rating for De Mexicaanse Hond", "emoDHtime")
dotWithErrorPlotSave(emoDMOFinal, "Emotional Arousal Rating for De Muur", "emoDMtime")
#LIT
dotWithErrorPlotSave(litDHOFinal, "Literariness Rating for De Mexicaanse Hond", "litDHtime")
dotWithErrorPlotSave(litDMOFinal, "Literariness Rating for De Muur", "litDMtime")
#Visualize ratings against time----
library(ggplot2)
library(psych)
dotWithErrorPlotSave <- function(trend, plotTitle, shortTitle) {
dodge <- position_dodge(width = 0.9)
limits <- aes(ymax = trend$MN + trend$SE,
ymin = trend$MN - trend$SE)
ggplot(data = trend, aes(x = Onset, y = MN)) +
geom_point(size=2.5, alpha=0.5, color = "orange") +
geom_errorbar(limits, position = dodge, width = 0.25) +
xlab("Word Onset Time(s)") +
theme(text = element_text(size=20), axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
ggtitle(paste(plotTitle, ", N=", ncol(trend)-6, sep=""))
ggsave(paste("~/Desktop/", shortTitle,".png", sep = ""), plot = last_plot(), device = png(),
scale = 1, width = 300, height = 200, units = c("mm"),
dpi = 300, limitsize = TRUE)
}
#EMO
dotWithErrorPlotSave(emoDHOFinal, "Emotional Arousal Rating for De Mexicaanse Hond", "emoDHtime")
dotWithErrorPlotSave(emoDMOFinal, "Emotional Arousal Rating for De Muur", "emoDMtime")
#LIT
dotWithErrorPlotSave(litDHOFinal, "Literariness Rating for De Mexicaanse Hond", "litDHtime")
dotWithErrorPlotSave(litDMOFinal, "Literariness Rating for De Muur", "litDMtime")
knitr::opts_chunk$set(echo = TRUE)
#Visualize ratings against time----
library(ggplot2)
dotWithErrorPlotSave <- function(trend, plotTitle, shortTitle) {
dodge <- position_dodge(width = 0.9)
limits <- aes(ymax = trend$MN + trend$SE,
ymin = trend$MN - trend$SE)
ggplot(data = trend, aes(x = Onset, y = MN)) +
geom_point(size=2.5, alpha=0.5, color = "orange") +
geom_errorbar(limits, position = dodge, width = 0.25) +
xlab("Word Onset Time(s)") +
theme(text = element_text(size=20), axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
ggtitle(paste(plotTitle, ", N=", ncol(trend)-6, sep=""))
ggsave(paste("~/Desktop/", shortTitle,".png", sep = ""), plot = last_plot(), device = png(),
scale = 1, width = 300, height = 200, units = c("mm"),
dpi = 300, limitsize = TRUE)
}
#EMO
dotWithErrorPlotSave(emoDHOFinal, "Emotional Arousal Rating for De Mexicaanse Hond", "emoDHtime")
dotWithErrorPlotSave(emoDMOFinal, "Emotional Arousal Rating for De Muur", "emoDMtime")
#LIT
dotWithErrorPlotSave(litDHOFinal, "Literariness Rating for De Mexicaanse Hond", "litDHtime")
dotWithErrorPlotSave(litDMOFinal, "Literariness Rating for De Muur", "litDMtime")
#Visualize ratings against time----
library(ggplot2)
dotWithErrorPlotSave <- function(trend, plotTitle, shortTitle) {
#  dodge <- position_dodge(width = 0.9)
limits <- aes(ymax = trend$MN + trend$SE,
ymin = trend$MN - trend$SE)
ggplot(data = trend, aes(x = Onset, y = MN)) +
geom_point(size=2.5, alpha=0.5, color = "orange") +
geom_errorbar(limits, width = 0.25) +
xlab("Word Onset Time(s)") +
theme(text = element_text(size=20), axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
ggtitle(paste(plotTitle, ", N=", ncol(trend)-6, sep=""))
ggsave(paste("~/Desktop/", shortTitle,".png", sep = ""), plot = last_plot(), device = png(),
scale = 1, width = 300, height = 200, units = c("mm"),
dpi = 300, limitsize = TRUE)
}
#EMO
dotWithErrorPlotSave(emoDHOFinal, "Emotional Arousal Rating for De Mexicaanse Hond", "emoDHtime")
dotWithErrorPlotSave(emoDMOFinal, "Emotional Arousal Rating for De Muur", "emoDMtime")
#LIT
dotWithErrorPlotSave(litDHOFinal, "Literariness Rating for De Mexicaanse Hond", "litDHtime")
dotWithErrorPlotSave(litDMOFinal, "Literariness Rating for De Muur", "litDMtime")
#Visualize ratings against time----
library(ggplot2)
dotWithErrorPlotSave <- function(trend, plotTitle, shortTitle) {
#  dodge <- position_dodge(width = 0.9)
limits <- aes(ymax = trend$MN + trend$SE,
ymin = trend$MN - trend$SE)
ggplot(data = trend, aes(x = Onset, y = MN)) +
geom_point(size=2.5, alpha=0.5, color = "orange") +
# geom_errorbar(limits, width = 0.25) +
xlab("Word Onset Time(s)") +
theme(text = element_text(size=20), axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
ggtitle(paste(plotTitle, ", N=", ncol(trend)-6, sep=""))
ggsave(paste("~/Desktop/", shortTitle,".png", sep = ""), plot = last_plot(), device = png(),
scale = 1, width = 300, height = 200, units = c("mm"),
dpi = 300, limitsize = TRUE)
}
#EMO
dotWithErrorPlotSave(emoDHOFinal, "Emotional Arousal Rating for De Mexicaanse Hond", "emoDHtime")
dotWithErrorPlotSave(emoDMOFinal, "Emotional Arousal Rating for De Muur", "emoDMtime")
#LIT
dotWithErrorPlotSave(litDHOFinal, "Literariness Rating for De Mexicaanse Hond", "litDHtime")
dotWithErrorPlotSave(litDMOFinal, "Literariness Rating for De Muur", "litDMtime")
library(ggplot2)
library(plotly)
install.packages('plotly')
library(ggplot2)
library(plotly)
plot(emoDHOFinal$Onset, emoDHOFinal$MN)
p <- ggplot(litDHOFinal, aes(x = Onset, y = MN)) +
geom_point() #+
#geom_errorbar(emoDHOFinal, mapping=aes(x = Onset, ymin = MN-SE, ymax=MN+SE)
ggplotly(p)
dotWithErrorPlotSave <- function(finalData) {
#dodge <- position_dodge(width = 0.9)
limits <- aes(ymax = finalData$MN + finalData$SE,
ymin = finalData$MN - finalData$SE)
p <- ggplot(data = finalData, aes(x = Onset, y = MN, color = "blue")) +
geom_point(size=2.5, alpha=0.6, color = "orange") +
geom_errorbar(limits, width = 0.25) +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.x=element_blank()) +
ggtitle(paste("emoDH", ", N=", ncol(finalData)-6, sep=""))
# ggsave(paste("~/Desktop/", shortTitle,".png", sep = ""), plot = last_plot(), device = png(),
#    scale = 1, width = 300, height = 200, units = c("mm"),
#   dpi = 300, limitsize = TRUE)
return(p)
}
dotWithErrorPlotSave(emoDHOFinal)
str(emoDHOFinal)
emoDHOFinal <- transform(emoDHOFinal, Onset = as.numeric(Onset))
str(emoDHOFinal)
emoDHOFinal <- transform(emoDHOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
dotWithErrorPlotSave <- function(trend, plotTitle, shortTitle) {
dodge <- position_dodge(width = 0.9)
limits <- aes(ymax = trend$MN + trend$SE,
ymin = trend$MN - trend$SE)
ggplot(data = trend, aes(x = Onset, y = MN)) +
geom_point(size=2.5, alpha=0.5, color = "orange") +
geom_errorbar(limits, position = dodge, width = 0.25) +
xlab("Word Onset Time(s)") +
theme(text = element_text(size=20), axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
ggtitle(paste(plotTitle, ", N=", ncol(trend)-6, sep=""))
ggsave(paste("~/Desktop/", shortTitle,".png", sep = ""), plot = last_plot(), device = png(),
scale = 1, width = 300, height = 200, units = c("mm"),
dpi = 300, limitsize = TRUE)
}
dotWithErrorPlotSave(emoDHOFinal, "Emotional Arousal Rating for De Mexicaanse Hond", "emoDHtime")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
emoDHOFinal <- transform(emoDHOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
dotWithErrorPlotSave <- function(trend, plotTitle, shortTitle) {
dodge <- position_dodge(width = 0.9)
limits <- aes(ymax = trend$MN + trend$SE,
ymin = trend$MN - trend$SE)
ggplot(data = trend, aes(x = Onset, y = MN)) +
geom_point(size=2.5, alpha=0.5, color = "orange") +
geom_errorbar(limits, position = dodge, width = 0.25) +
xlab("Word Onset Time(s)") +
theme(text = element_text(size=20), axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
ggtitle(paste(plotTitle, ", N=", ncol(trend)-6, sep=""))
ggsave(paste("~/Desktop/", shortTitle,".png", sep = ""), plot = last_plot(), device = png(),
scale = 1, width = 300, height = 200, units = c("mm"),
dpi = 300, limitsize = TRUE)
}
dotWithErrorPlotSave(emoDHOFinal, "Emotional Arousal Rating for De Mexicaanse Hond", "emoDHtime")
dotWithErrorPlotSave <- function(trend, plotTitle, shortTitle) {
dodge <- position_dodge(width = 0.9)
limits <- aes(ymax = trend$MN + trend$SE,
ymin = trend$MN - trend$SE)
ggplot(data = trend, aes(x = Onset, y = MN, color = Onset)) +
geom_point(size=2.5, alpha=0.5, color = "orange") +
geom_errorbar(limits, position = dodge, width = 0.25) +
xlab("Word Onset Time(s)") +
theme(text = element_text(size=20), axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
ggtitle(paste(plotTitle, ", N=", ncol(trend)-6, sep=""))
ggsave(paste("~/Desktop/", shortTitle,".png", sep = ""), plot = last_plot(), device = png(),
scale = 1, width = 300, height = 200, units = c("mm"),
dpi = 300, limitsize = TRUE)
}
dotWithErrorPlotSave(emoDHOFinal, "Emotional Arousal Rating for De Mexicaanse Hond", "emoDHtime")
#Visualize ratings against time----
library(ggplot2)
emoDHOFinal <- transform(emoDHOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
emoDMOFinal <- transform(emoDMOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
litDHOFinal <- transform(litDHOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
litDMOFinal <- transform(litDMOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
dotWithErrorPlotSave <- function(trend, plotTitle, shortTitle) {
dodge <- position_dodge(width = 0.9)
limits <- aes(ymax = trend$MN + trend$SE,
ymin = trend$MN - trend$SE)
ggplot(data = trend, aes(x = Onset, y = MN, color = Onset)) +
geom_point(size=2.5, alpha=0.5, color = "orange") +
geom_errorbar(limits, position = dodge, width = 0.25) +
xlab("Word Onset Time(s)") +
theme(text = element_text(size=20), axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
ggtitle(paste(plotTitle, ", N=", ncol(trend)-6, sep=""))
ggsave(paste("~/Desktop/", shortTitle,".png", sep = ""), plot = last_plot(), device = png(),
scale = 1, width = 300, height = 200, units = c("mm"),
dpi = 300, limitsize = TRUE)
}
#EMO
dotWithErrorPlotSave(emoDHOFinal, "Emotional Arousal Rating for De Mexicaanse Hond", "emoDHtime")
dotWithErrorPlotSave(emoDMOFinal, "Emotional Arousal Rating for De Muur", "emoDMtime")
#LIT
dotWithErrorPlotSave(litDHOFinal, "Literariness Rating for De Mexicaanse Hond", "litDHtime")
dotWithErrorPlotSave(litDMOFinal, "Literariness Rating for De Muur", "litDMtime")
View(litDHTrend)
View(emoResultClean)
emoResultClean[1237,1]
View(emoDMTrend)
View(litDH2VFinal)
View(litDHTrend)
View(litDHOFinal)
View(DH2V)
#Visualize ratings against time----
library(ggplot2)
emoDHOFinal <- transform(emoDHOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
emoDMOFinal <- transform(emoDMOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
litDHOFinal <- transform(litDHOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
litDMOFinal <- transform(litDMOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
dotWithErrorPlotSave <- function(trend, plotTitle, shortTitle) {
limits <- aes(ymax = trend$MN + trend$SE,
ymin = trend$MN - trend$SE)
ggplot(data = trend, aes(x = Onset, y = MN, color = Onset)) +
geom_point(size=2.5, alpha=0.8, color = "orange") +
geom_errorbar(limits, width = 0.25) +
xlab("Word Onset Time(s)") +
theme(text = element_text(size=20), axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
ggtitle(paste(plotTitle, ", N=", ncol(trend)-6, sep=""))
ggsave(paste("~/Desktop/", shortTitle,".png", sep = ""), plot = last_plot(), device = png(),
scale = 1, width = 300, height = 200, units = c("mm"),
dpi = 300, limitsize = TRUE)
}
#EMO
dotWithErrorPlotSave(emoDHOFinal, "Emotional Arousal Rating for De Mexicaanse Hond", "emoDHtime")
dotWithErrorPlotSave(emoDMOFinal, "Emotional Arousal Rating for De Muur", "emoDMtime")
#LIT
dotWithErrorPlotSave(litDHOFinal, "Literariness Rating for De Mexicaanse Hond", "litDHtime")
dotWithErrorPlotSave(litDMOFinal, "Literariness Rating for De Muur", "litDMtime")
#Visualize ratings against time----
library(ggplot2)
emoDHOFinal <- transform(emoDHOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
emoDMOFinal <- transform(emoDMOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
litDHOFinal <- transform(litDHOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
litDMOFinal <- transform(litDMOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
dotWithErrorPlotSave <- function(trend, plotTitle, shortTitle) {
limits <- aes(ymax = trend$MN + trend$SE,
ymin = trend$MN - trend$SE)
ggplot(data = trend, aes(x = Onset, y = MN, color = Onset)) +
geom_point(size=2.5, alpha=0.8, color = "orange") +
geom_errorbar(limits, width = 0.2) +
xlab("Word Onset Time(s)") +
theme(text = element_text(size=20), axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
ggtitle(paste(plotTitle, ", N=", ncol(trend)-6, sep=""))
ggsave(paste("~/Desktop/", shortTitle,".png", sep = ""), plot = last_plot(), device = png(),
scale = 1, width = 300, height = 200, units = c("mm"),
dpi = 300, limitsize = TRUE)
}
#EMO
dotWithErrorPlotSave(emoDHOFinal, "Emotional Arousal Rating for De Mexicaanse Hond", "emoDHtime")
dotWithErrorPlotSave(emoDMOFinal, "Emotional Arousal Rating for De Muur", "emoDMtime")
#LIT
dotWithErrorPlotSave(litDHOFinal, "Literariness Rating for De Mexicaanse Hond", "litDHtime")
dotWithErrorPlotSave(litDMOFinal, "Literariness Rating for De Muur", "litDMtime")
#Visualize ratings against time----
library(ggplot2)
emoDHOFinal <- transform(emoDHOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
emoDMOFinal <- transform(emoDMOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
litDHOFinal <- transform(litDHOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
litDMOFinal <- transform(litDMOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
dotWithErrorPlotSave <- function(trend, plotTitle, shortTitle) {
limits <- aes(ymax = trend$MN + trend$SE,
ymin = trend$MN - trend$SE)
ggplot(data = trend, aes(x = Onset, y = MN, color = Onset)) +
geom_point(size=2.5, alpha=0.8, color = "orange") +
geom_errorbar(limits, width = 0.1) +
xlab("Word Onset Time(s)") +
theme(text = element_text(size=20), axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
ggtitle(paste(plotTitle, ", N=", ncol(trend)-6, sep=""))
ggsave(paste("~/Desktop/", shortTitle,".png", sep = ""), plot = last_plot(), device = png(),
scale = 1, width = 300, height = 200, units = c("mm"),
dpi = 300, limitsize = TRUE)
}
#EMO
dotWithErrorPlotSave(emoDHOFinal, "Emotional Arousal Rating for De Mexicaanse Hond", "emoDHtime")
dotWithErrorPlotSave(emoDMOFinal, "Emotional Arousal Rating for De Muur", "emoDMtime")
#LIT
dotWithErrorPlotSave(litDHOFinal, "Literariness Rating for De Mexicaanse Hond", "litDHtime")
dotWithErrorPlotSave(litDMOFinal, "Literariness Rating for De Muur", "litDMtime")
#Visualize ratings against time----
library(ggplot2)
emoDHOFinal <- transform(emoDHOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
emoDMOFinal <- transform(emoDMOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
litDHOFinal <- transform(litDHOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
litDMOFinal <- transform(litDMOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
dotWithErrorPlotSave <- function(trend, plotTitle, shortTitle) {
limits <- aes(ymax = trend$MN + trend$SE,
ymin = trend$MN - trend$SE)
ggplot(data = trend, aes(x = Onset, y = MN, color = Onset)) +
geom_point(size=2.5, alpha=0.8, color = "orange") +
geom_errorbar(limits, width = 0.5) +
xlab("Word Onset Time(s)") +
theme(text = element_text(size=20), axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
ggtitle(paste(plotTitle, ", N=", ncol(trend)-6, sep=""))
ggsave(paste("~/Desktop/", shortTitle,".png", sep = ""), plot = last_plot(), device = png(),
scale = 1, width = 300, height = 200, units = c("mm"),
dpi = 300, limitsize = TRUE)
}
#EMO
dotWithErrorPlotSave(emoDHOFinal, "Emotional Arousal Rating for De Mexicaanse Hond", "emoDHtime")
dotWithErrorPlotSave(emoDMOFinal, "Emotional Arousal Rating for De Muur", "emoDMtime")
#LIT
dotWithErrorPlotSave(litDHOFinal, "Literariness Rating for De Mexicaanse Hond", "litDHtime")
dotWithErrorPlotSave(litDMOFinal, "Literariness Rating for De Muur", "litDMtime")
#Visualize ratings against time----
library(ggplot2)
emoDHOFinal <- transform(emoDHOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
emoDMOFinal <- transform(emoDMOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
litDHOFinal <- transform(litDHOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
litDMOFinal <- transform(litDMOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
dotWithErrorPlotSave <- function(trend, plotTitle, shortTitle) {
limits <- aes(ymax = trend$MN + trend$SE,
ymin = trend$MN - trend$SE)
ggplot(data = trend, aes(x = Onset, y = MN, color = Onset)) +
geom_point(size=2.5, alpha=0.8, color = "orange") +
geom_errorbar(limits, width = 0.5) +
xlab("Word Onset Time (in sec)") +
theme(text = element_text(size=15), axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
ggtitle(paste(plotTitle, ", N=", ncol(trend)-6, sep=""))
ggsave(paste("~/Desktop/", shortTitle,".png", sep = ""), plot = last_plot(), device = png(),
scale = 1, width = 300, height = 200, units = c("mm"),
dpi = 300, limitsize = TRUE)
}
#EMO
dotWithErrorPlotSave(emoDHOFinal, "Emotional Arousal Rating for De Mexicaanse Hond", "emoDHtime")
dotWithErrorPlotSave(emoDMOFinal, "Emotional Arousal Rating for De Muur", "emoDMtime")
#LIT
dotWithErrorPlotSave(litDHOFinal, "Literariness Rating for De Mexicaanse Hond", "litDHtime")
dotWithErrorPlotSave(litDMOFinal, "Literariness Rating for De Muur", "litDMtime")
#Visualize ratings against time----
library(ggplot2)
emoDHOFinal <- transform(emoDHOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
emoDMOFinal <- transform(emoDMOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
litDHOFinal <- transform(litDHOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
litDMOFinal <- transform(litDMOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
dotWithErrorPlotSave <- function(trend, plotTitle, shortTitle) {
limits <- aes(ymax = trend$MN + trend$SE,
ymin = trend$MN - trend$SE)
ggplot(data = trend, aes(x = Onset, y = MN, color = Onset)) +
geom_point(size=2.5, alpha=0.8, color = "orange") +
geom_errorbar(limits, width = 0.5) +
xlab("Word Onset Time (in sec)") +
ylab("Mean Rating")
theme(text = element_text(size=15), axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
ggtitle(paste(plotTitle, ", N=", ncol(trend)-6, sep=""))
ggsave(paste("~/Desktop/", shortTitle,".png", sep = ""), plot = last_plot(), device = png(),
scale = 1, width = 300, height = 200, units = c("mm"),
dpi = 300, limitsize = TRUE)
}
#EMO
dotWithErrorPlotSave(emoDHOFinal, "Emotional Arousal Rating for De Mexicaanse Hond", "emoDHtime")
#Visualize ratings against time----
library(ggplot2)
emoDHOFinal <- transform(emoDHOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
emoDMOFinal <- transform(emoDMOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
litDHOFinal <- transform(litDHOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
litDMOFinal <- transform(litDMOFinal, Onset = as.numeric(Onset), Duration = as.numeric(Duration))
dotWithErrorPlotSave <- function(trend, plotTitle, shortTitle) {
limits <- aes(ymax = trend$MN + trend$SE,
ymin = trend$MN - trend$SE)
ggplot(data = trend, aes(x = Onset, y = MN, color = Onset)) +
geom_point(size=2.5, alpha=0.8, color = "orange") +
geom_errorbar(limits, width = 0.5) +
xlab("Word Onset Time (in sec)") +
ylab("Mean Rating") +
theme(text = element_text(size=15), axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
ggtitle(paste(plotTitle, ", N=", ncol(trend)-6, sep=""))
ggsave(paste("~/Desktop/", shortTitle,".png", sep = ""), plot = last_plot(), device = png(),
scale = 1, width = 300, height = 200, units = c("mm"),
dpi = 300, limitsize = TRUE)
}
#EMO
dotWithErrorPlotSave(emoDHOFinal, "Emotional Arousal Rating for De Mexicaanse Hond", "emoDHtime")
dotWithErrorPlotSave(emoDMOFinal, "Emotional Arousal Rating for De Muur", "emoDMtime")
#LIT
dotWithErrorPlotSave(litDHOFinal, "Literariness Rating for De Mexicaanse Hond", "litDHtime")
dotWithErrorPlotSave(litDMOFinal, "Literariness Rating for De Muur", "litDMtime")
#Attempt at facetgrid
allRatingMarked <- read.csv(file = "thesis/AllOriginal_eventMarked.csv", header = T, sep = ",", stringsAsFactors = FALSE)
#Attempt at facetgrid
allRatingMarked <- read.csv(file = "thesis/AllOriginal_eventMarked.csv", header = T, sep = ",", stringsAsFactors = FALSE)
limits <- aes(ymax = allRatingMarked$MN + allRatingMarked$SE,
ymin = allRatingMarked$MN - allRatingMarked$SE)
ggplot(data = allRatingMarked, aes(x = Onset, y = MN, color = type)) +
geom_point(size=2.5, alpha=0.8, color = "orange") +
geom_errorbar(limits, width = 0.5) +
xlab("Word Onset Time (in sec)") +
ylab("Mean Rating") +
theme(text = element_text(size=15), axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
facet_grid(type ~ story)
#Attempt at facetgrid
allRatingMarked <- read.csv(file = "thesis/AllOriginal_eventMarked.csv", header = T, sep = ",", stringsAsFactors = FALSE)
limits <- aes(ymax = allRatingMarked$MN + allRatingMarked$SE,
ymin = allRatingMarked$MN - allRatingMarked$SE)
ggplot(data = allRatingMarked, aes(x = Onset, y = MN, color = type)) +
geom_point(size=2.5, alpha=0.8, color = "orange") +
geom_errorbar(limits, width = 0.5) +
xlab("Word Onset Time (in sec)") +
ylab("Mean Rating") +
theme(text = element_text(size=15), axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
facet_grid(type ~ story)
